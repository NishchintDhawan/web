<?xml version="1.0" encoding="UTF-8"?>

<!--
This build file constructs JavaScript packages for using the VOView classes, 
and installs them and other needed files on a Web server.  This includes a 
Perl script for running a proxy, which is needed for VOTABLE files that are 
not local to the server.  If you will only be accessing tables local to the 
server, you can set the PROXY_URL filter token value to "".
-->

<!DOCTYPE project>

<project default="build" name="cadcVOTV" basedir=".">
  <description>Canadian Astronomy Data Center Virtual Observatory Table Viewer 1.0</description>

  <property environment="env" />
  <property file="local.build.properties" />
  <property name="project" value="cadcVOTV" />

  <!-- site-specific build properties or overrides of values in opencadc.properties -->
  <property file="${env.CADC_PREFIX}/etc/local.properties" />

  <!-- site-specific targets, e.g. install, cannot duplicate those in opencadc.targets.xml -->
  <import file="${env.CADC_PREFIX}/etc/local.targets.xml" optional="true" />

  <!-- default properties and targets -->
  <property file="${env.CADC_PREFIX}/etc/opencadc.properties" />
  <import file="${env.CADC_PREFIX}/etc/opencadc.targets.xml"/>

  <!-- developer convenience: place for extra targets and properties -->
  <import file="extras.xml" optional="true" />

  <target name="install" depends="build, install_www">
    <tstamp />
    <touch file="${build}/LASTINSTALL.${DSTAMP}_${TSTAMP}" />
  </target>

  <target name="build" depends="resourceCopy" />

  <target name="resourceCopy">
    <copy todir="${build}/www">
      <fileset dir="src/www" />
    </copy>
  </target>

  <target name="install_www" depends="resourceCopy, test">
    <chmod perm="644">
      <fileset dir="${build}/www"/> <!-- files -->
    </chmod>
    <chmod perm="755">
      <dirset dir="${build}/www" /> <!-- directories -->
    </chmod>

    <echo message="Copying using '${copy_cmd} ${copy_args} ${build}/www/ ${www}/" />

    <exec executable="${copy_cmd}">
      <arg value="${copy_args}" />
      <arg value="${build}/www/" />
      <arg value="${www}/" />
    </exec>
  </target>


  <!-- Testing -->
  <condition property="osfamily" value="Windows">
    <os family="windows"/>
  </condition>
  <condition property="osfamily" value="Mac">
    <os family="mac"/>
  </condition>
  <condition property="osfamily" value="Linux">
    <os family="unix"/>
  </condition>
  <condition property="test-host" value="${testHost}" else="localhost">
    <isset property="${testHost}"/>
  </condition>

  <property name="runner" value="test/qunit-runner-1.18.0.js" />
  <property name="phantomjs" value="test/phantomjs/${osfamily}/phantomjs" />

  <target name="setup-test">
    <available file="abc.txt" property="abc.present"/>
  </target>

  <target name="test" depends="setup-test, build"
          description="Runs QUnit Tests using PhantomJS">
      
    <!-- QUnit Javascript Unit Tests -->
    <echo message="Executing QUnit Javascript Unit Tests..."/>

    <echo message="Dynamic row adding tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/row_add" />
    </antcall>

    <echo message="VOTable Tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/votable" />
    </antcall>

    <echo message="CADC VOTV Plugin default filter tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/plugin_filter_default" />
    </antcall>

    <echo message="CADC VOTV Value Filter tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/value_filter" />
    </antcall>

    <echo message="VOTable XML reader tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/xml_reader" />
    </antcall>

    <echo message="VOTable CSV reader tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/csv_reader" />
    </antcall>

    <echo message="Sort comparer tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/comparer" />
    </antcall>

    <echo message="VOTable Streaming builder tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/streaming_reader" />
    </antcall>

    <echo message="Result state tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/result_state" />
    </antcall>

    <echo message="Result state tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/checkbox_select" />
    </antcall>
    
    <echo message="VOTV tests"/>
    <antcall target="js-test">
      <param name="js-test-dir" value="test/src/votv" />
    </antcall>
    
  </target>

  <target name="js-test">
    <echo message="Testing in ${js-test-dir}" />
    <echo message="os name: |${os.name}| os arch: |${os.arch}| family: |${osfamily}|" />

    <exec executable="${phantomjs}" failonerror="true">
      <arg value="${runner}" />
      <arg value="file:///${user.dir}/${js-test-dir}/index.html" />
      <arg value="10000" />
    </exec>
  </target>

</project>
