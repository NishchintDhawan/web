<?xml version="1.0" encoding="UTF-8"?>

<!--
This build file constructs JavaScript packages for using the VOView classes, 
and installs them and other needed files on a Web server.  This includes a 
Perl script for running a proxy, which is needed for VOTABLE files that are 
not local to the server.  If you will only be accessing tables local to the 
server, you can set the PROXY_URL filter token value to "".
-->

<!DOCTYPE project>

<project default="build" basedir=".">
  <description>Canadian Astronomy Data Center Virtual Observatory Table Viewer 1.0</description>

  <property environment="env" />
  <property file="local.build.properties" />
  <property name="project" value="cadcVOTV" />

  <!-- site-specific build properties or overrides of values in opencadc.properties -->
  <property file="${env.CADC_PREFIX}/etc/local.properties" />

  <!-- site-specific targets, e.g. install, cannot duplicate those in opencadc.targets.xml -->
  <import file="${env.CADC_PREFIX}/etc/local.targets.xml" optional="true" />

  <!-- default properties and targets -->
  <property file="${env.CADC_PREFIX}/etc/opencadc.properties" />
  <import file="${env.CADC_PREFIX}/etc/opencadc.targets.xml"/>

  <!-- developer convenience: place for extra targets and properties -->
  <import file="extras.xml" optional="true" />

  <target name="install" depends="build, install_www">
    <tstamp />
    <touch file="${build}/LASTINSTALL.${DSTAMP}_${TSTAMP}" />
  </target>

  <target name="build" depends="clientBuild" />

  <target name="resourceCopy">
    <copy todir="${build}/www">
      <fileset dir="src/www" />
    </copy>
  </target>

  <target name="clientBuild" depends="resourceCopy">
    <apply executable="java" parallel="false" dest="${build}/www/${project}/javascript">

      <fileset dir="${build}/www/${project}/javascript" includes="cadc.v*.js" />
      <arg line="-jar" />
      <arg path="${lib.compressor}" />
      <srcfile />
      <arg line="-o" />
      <mapper type="glob" from="*.js" to="*.min.js" />

      <targetfile />
    </apply>
  </target>

  <target name="install_www" depends="clientBuild">

    <chmod perm="644">
      <fileset dir="${build}/www"/> <!-- files -->
    </chmod>
    <chmod perm="755">
      <dirset dir="${build}/www" /> <!-- directories -->
    </chmod>

    <echo message="Copying using '${copy_cmd} ${copy_args} ${build}/www/ ${www}/" />

    <exec executable="${copy_cmd}">
      <arg value="${copy_args}" />
      <arg value="${build}/www/" />
      <arg value="${www}/" />
    </exec>

  </target>

  <target name="test" depends="install" description="Runs QUnit Tests using PhantomJS">
      
    <!-- QUnit Javascript Unit Tests -->
    <echo message="Executing QUnit Javascript Unit Tests..."/>

    <echo message="VOTable Tests"/>
    <apply executable="test/phantomjs" failonerror="true">
      <arg value="test/qunit-runner.js" />
      <arg line="--qunit test/qunit-1.10.0.js --package test/src/votable/package.json --tests test/src/votable/cadc.votable.js --junit test/src/votable/qunit-results.xml" />
      <fileset dir="test/src/votable">
        <include name="cadc.votable.js" />
        <exclude name="package.json" />
      </fileset>
      <srcfile/>
    </apply>

    <echo message="CADC VOTV Search Filter tests"/>
    <apply executable="test/phantomjs" failonerror="true">
      <arg value="test/qunit-runner.js" />
      <arg line="--qunit test/qunit-1.10.0.js --package test/src/search_filter/package.json --tests test/src/search_filter/cadc.votv.search-filter.js --junit test/src/search_filter/qunit-results.xml" />
      <fileset dir="test/src/search_filter">
        <include name="cadc.votv.search-filter.js" />
        <exclude name="package.json" />
      </fileset>
      <srcfile/>
    </apply>

    <echo message="CADC VOTV Value Filter tests"/>
    <apply executable="test/phantomjs" failonerror="true">
      <arg value="test/qunit-runner.js" />
      <arg line="--qunit test/qunit-1.10.0.js --package test/src/value_filter/package.json --tests test/src/value_filter/cadc.votv.value-filter.js --junit test/src/value_filter/qunit-results.xml" />
      <fileset dir="test/src/value_filter">
        <include name="cadc.votv.value-filter.js" />
        <exclude name="package.json" />
      </fileset>
      <srcfile/>
    </apply>
      
    <echo message="VOTable reader tests"/>
    <apply executable="test/phantomjs" failonerror="true">
      <arg value="test/qunit-runner.js" />
      <arg line="--qunit test/qunit-1.10.0.js --package test/src/xml_reader/package.json --tests test/src/xml_reader/cadc.votable.xml-reader.js --junit test/src/xml_reader/qunit-results.xml" />
      <fileset dir="test/src/xml_reader">
        <include name="cadc.votable.xml-reader.js" />
        <exclude name="package.json" />
      </fileset>
      <srcfile/>
    </apply>

    <echo message="Sort comparer tests"/>
    <apply executable="test/phantomjs" failonerror="true">
      <arg value="test/qunit-runner.js" />
      <arg line="--qunit test/qunit-1.10.0.js --package test/src/comparer/package.json --tests test/src/comparer/cadc.votv.comparer.js --junit test/src/comparer/qunit-results.xml" />
      <fileset dir="test/src/comparer">
        <include name="cadc.votv.comparer.js" />
        <exclude name="package.json" />
      </fileset>
      <srcfile/>
    </apply>
      
  </target>
</project>
